@{
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@using PCE_Web.Classes
@using PCE_Web.Controllers
@using System.ComponentModel.DataAnnotations

@model SuggestionsView
<link rel="stylesheet" href="~/css/styleForSuggestionView.css">
<link rel="stylesheet" href="~/css/Loading.css">

<div class="text-center">
    <div id="alertBox" class="alert warning">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
        @SuggestionsView.AlertBoxText
    </div>
</div>

<br>
<h1>
    Iš viso surasta prekių: @Model.AllProducts.Count,
    @{
        var itemsList =
            from item in @Model.AllProducts
            group item by item.Seller;
        <text>@itemsList.Select(x => string.Format("{0}: {1}", x.Key, x.Count())).Aggregate((current, next) => current + ", " + next)</text>
    }
</h1>
<br>
<div class="table-responsive">
    <table id="items">
        <tr>
            <th class="hide">Pardavėjas</th>
            <th>Nuotrauka</th>
            <th>Prekė</th>
            <th>Kaina</th>
            <th></th>
        </tr>
        @foreach (var product in @Model.Products)
        {
            <tr>
                <td class="hide" align="center">@product.Seller</td>
                <td align="center"><a href="@product.Link"><img class="image" alt="product.jpg" src="@product.Picture" style="max-width:100%; height:auto; width:auto;"></a></td>
                <td align="center"><a href="@Url.Action("ParticularItemLoggedIn", "ParticularItemLoggedIn", new { particularItem = @product.Name })" class="link">@product.Name</a> </td>
                <td align="center">@product.Price</td>
                <td align="center"><button id="mvc-action-button" class="myButton" onclick="location.href = '@Url.Action("Suggestions", "SearchLoggedIn", new { link = product.Link, pictureUrl = product.Picture, seller = product.Seller, name = product.Name, price = product.Price} )'"><i class="fa fa-plus-circle"></i></button></td>
            </tr>

        }
    </table>
</div>

@{
    int maxPages = Model.AllProducts.Count / 10;
    int nextPage = Model.Page + 1;
    int previousPage = Model.Page - 1;

    if(Model.AllProducts.Count % 10 != 0)
    {
        ++maxPages;
    }

    if(Model.Page == 1)
    {
        previousPage = Model.Page;
    }
    if(Model.Page == maxPages)
    {
        nextPage = Model.Page;
    }
}
<br />
<form method="get" action="" style="float:right;margin-right:35%;">
    <input type="hidden" name="ProductName" value="@Model.ProductName">
    <input type="hidden" name="Page" value="@nextPage">
    <button type="submit" class="btn btn-success" asp-area="" asp-controller="SearchLoggedIn" asp-action="Suggestions"><i class="fa fa-angle-right"></i></button>
</form>
<h8 style="text-align:center;">@Model.Page / @maxPages</h8>
<form method="get" action="" style="float:left; margin-left: 35%;">
    <input type="hidden" name="ProductName" value="@Model.ProductName">
    <input type="hidden" name="Page" value="@previousPage">
    <button type="submit" class="btn btn-success" asp-area="" asp-controller="SearchLoggedIn" asp-action="Suggestions"><i class="fa fa-angle-left"></i></button>
</form>

<div id="overlay" class="overlay">

    <div class="loader">
        <img src="~/img/loader.gif" width="400" height="400" />
    </div>

</div>

<script>
    var buttons = document.getElementsByClassName('link');
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].addEventListener('click', function (e) {
            document.getElementById('overlay').style.display = 'flex';
        })
    }
</script>


<script>

    window.onload = function () {
        var duration = 3000;
        setTimeout(function () { $('#alertBox').hide(); }, duration);
    };
</script>

